<div id="invitation">
  <p>Room ID: <%= @room.id %></p>
  <p>Sesion ID: <%= @room.sessionId %></p>
  <p>Token: <%= @tok_token %></p>
</div>
<div id="videobox">

</div>
<script src="http://static.opentok.com/v0.91/js/TB.min.js" type="text/javascript"></script>
<script type="text/javascript">
	var apiKey =  22329432;
	var sessionId = "<%= @room.sessionId %>";
	var token = "<%= @tok_token %>";

	var session;
 var connectionCount = 0;
TB.setLogLevel(TB.DEBUG);
TB.addEventListener("exception", exceptionHandler);
 
function connect() {
    if (TB.checkSystemRequirements() == 1) {
        var session = TB.initSession(sessionID);
        session.addEventListener("connectionCreated",
                                 connectionCreatedHandler);
        session.addEventListener("connectionDestroyed",
                                 connectionDestroyedHandler);
        session.connect(apiKey, token);
 
    } else {
        TB.log("The client does not support WebRTC.");
    }
 
    session.addEventListener("sessionConnected",
                              sessionConnectHandler);
    session.connect(apiKey, token);
}
 
function disconnect() {
    session.addEventListener("sessionDisconnected")
                           sessionDisconnectHandler);
  session.connect(apiKey, token);
 
  function sessionDisconnectHandler(event) {
      // The event is defined by the SessionDisconnectEvent class
      if (event.reason == "networkDisconnected") {
          alert("Your network connection terminated.")
      }
  }
 
 
 
function sessionConnectHandler(event) {
    connectionCount = event.connections.length;
    TB.log(connectionCount);
}
 
function connectionCreatedHandler(event) {
    connectionCount += event.connections.length;
    TB.log(connectionCount);
}
 
function connectionDestroyedHandler(event) {
    connectionCount -= event.connections.length;
    TB.log(connectionCount);
}
 
function exceptionHandler(event) {
    if (event.code == 1006) {
        // Connection failed
    }
}
</script>